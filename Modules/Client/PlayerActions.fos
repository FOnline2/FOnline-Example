// FOS Client
// Author: Tawaruuk

bool    MoveIsActive = false; // Player is moving now?
uint16  MoveTo_X     = 0;     // Target XY to move
uint16  MoveTo_Y     = 0;
bool    MoveRun      = false; // Run, run, run!

//****************************************************************************************************************************** Module initialization
void ModuleInit()
{
    __EventLoop.Subscribe( OnLoop ); // Бесконечный цикл бытия...
}

//****************************************************************************************************************************** Start moving
void MoveTo( uint16 x, uint16 y, bool run=false ) //EXPORT//
{
    MoveTo_X     = x;
    MoveTo_Y     = y;
    MoveRun      = run;
    MoveIsActive = true;

    // Item msg test (temporary) ??
    Item[] items = GetMapHexItems( x, y );
    if ((items.length()>0)) {
        Message( GetMsgStr( TEXTMSG_ITEM, ITEMSTR(items[0].ProtoId, items[0].Info   ) ) );
        Message( GetMsgStr( TEXTMSG_ITEM, ITEMSTR(items[0].ProtoId, items[0].Info+1 ) ) );
    }
}

//****************************************************************************************************************************** Loop
void OnLoop()
{
    Critter player = GetChosen();
    if (  player is null  ) return;
    if ( !player.IsFree() ) return; // Otherwise, player movement will be very fast (only in player client)
    if (  player.IsDead() ) {
        MoveIsActive = false; // Corpse not need to go anywhere...
        return;
    }

//--- Player moving ------------------------------------------------------------------------------------------------------------

    MoveIsActive = MoveIsActive && ( (player.HexX != MoveTo_X) || (player.HexY != MoveTo_Y) );
    if ( MoveIsActive ) {

        player.IsRunning = MoveRun;

        // Path find
        uint cut = 0; //?? Нужно понять для чего это?
        uint8[] path = GetPath( player.HexX, player.HexY, MoveTo_X, MoveTo_Y, cut );

        // One step to the next cell in path
        if ( path !is null ) {
            uint16 x_next = player.HexX;
            uint16 y_next = player.HexY;
            MoveHexByDir( x_next, y_next, path[0], 1 );
            // Move player and rotate to move direction (first bool). Second bool - unknown.
            CustomCall( "TransitCritter " + x_next + " " + y_next + " true false" );
            CustomCall( "RebuildLookBorders" );
            // Send out step to server
            CustomCall( "SendMove " + path[0] );
        } else {
            MoveIsActive = false;
        }

    }

//--- --------------------------------------------------------------------------------------------------------------------------

}

//******************************************************************************************************************************